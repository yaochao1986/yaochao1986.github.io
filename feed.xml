<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://yaochao1986.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://yaochao1986.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-01-22T13:00:12+00:00</updated><id>https://yaochao1986.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Embodied Intelligence</title><link href="https://yaochao1986.github.io/blog/2024/EmbodiedIntelligence/" rel="alternate" type="text/html" title="Embodied Intelligence"/><published>2024-12-06T20:48:20+00:00</published><updated>2024-12-06T20:48:20+00:00</updated><id>https://yaochao1986.github.io/blog/2024/EmbodiedIntelligence</id><content type="html" xml:base="https://yaochao1986.github.io/blog/2024/EmbodiedIntelligence/"><![CDATA[<h1 id="引言">引言</h1> <p>具身智能（Embodied AI）强调机器与物理世界交互的重要性，旨在通过促进软硬件一体化智能体的环境适应性学习和智能行为的演化，解决更多智能系统在现实应用中的问题。这一理念促使研究者设计出能够自主学习和适应环境的高度复杂智能系统，使AI研究从纯数字世界的存在跨越到一个能够在物理环境中主动作用和感知的新范式。</p> <p>目前的非具身学习一般采用“大规模无监督训练+小样本有监督微调”范式，训练得到的模型直接部署到不同的硬件环境，算法的学习独立于硬件环境而存在，其性能表现取决于模型的泛化能力。具身学习则强调通过“<strong>大模型</strong>”、“<strong>基础模型</strong>”或“<strong>世界模型</strong>”<strong>范式得到常识表征</strong>，<strong>在具体场景中通过具身实体、智能算法、环境的相互作用（即生理、心理、物理的三元交互）实现自适应进化</strong>，完成智能体对应用环境的自主适配。</p> <h1 id="具身智能概述与分析">具身智能概述与分析</h1> <h2 id="发展历程">发展历程</h2> <p>随着AI与机器人技术的飞速发展，具身智能概念近几年备受学术界和产业界关注。智能体作为人工智能领域的核心概念之一，是指能够感知环境、进行推理并采取行动的智能系统。智能体既可以是机器人等物理实体，也可以是软件程序、数学模型等形式的虚拟体。一般地，具身智能特指拥有物理实体的智能体，其可以通过与环境进行情景化的交互，主动获取物理世界的真实反馈。 从历史发展脉络出发，具身智能发展分为早期阶段、具身认知提出阶段、深度学习与强化学习阶段、现代发展阶段：</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/EIfig1-480.webp 480w,/assets/img/EIfig1-800.webp 800w,/assets/img/EIfig1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/EIfig1.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>（1）早期阶段。具身智早期的研究主要集中在符号处理和逻辑推理。机器人学开始起步，但主要关注的是工业自动化和简单的任务执行。1950年，英国计算机科学家Tuing开创性地提出“图灵测试”概念，他认为如果一台机器能够与人进行自然的对话，并且无法被人类辨别，那么这台机器就可以被认为是具有智能的。“图灵测试”的提出标志着智能体研究的开端，为后续研究奠定了坚实的理论基础。20世纪60和709年代，智能体研究取得了一定进展。知识表示和推理成为AI研究的主要方向，但这些方法通常依赖于预先定义的规则和模型，缺乏对环境的动态适应能力。</p> <p>（2）具身认知提出阶段。1986年，美国计算机科学家Minsky首次提出了“Agent”概念，将逐渐构成人类心智或其他认知系统的简单个体环节定义为智能体，对后续研究产生深远影响。1990年，被誉为“机器人教父”的Brooks创立iRobot公司，提出“行为主义机器人”概念，促进了具身智能技术的广泛应用。1993年，Dennett提出了“具身认知”（Embodied cognition）的概念，强调智能体的认知能力与物理实体和环境互动密切相关，这一理论挑战了传统的符号主义认知观，认为智能不仅仅是大脑的产物，而是实体和环境共同作用的结果。</p> <p>（3）深度学习与强化学习阶段。强化学习强调，机器人可以通过与环境的互动不断优化自己的行为策略。在这个阶段，多模态传感器技术的发展使机器人能够获取更丰富的环境信息，如视觉、听觉、触觉等，为具身智能提供了强大的工具。这一阶段的具身智能已经可以被较为详细地分为多模态感知深度学习领域和行为决策强化学习领域。</p> <p>（4）现代发展阶段。研究重点开始倾向于在多模态感知与融合、行为决策的基础上新增了自主学习与适应、人机协作等。现代具身智能系统通过整合环境感知数据和智能体认知信息，能够在动态和不确定的环境中表现出更高的适应性和灵活性。研究者还致力于实现具身智能系统的自主学习与进化，使其能够在不同任务和环境中持续优化自己的行为。</p> <h2 id="优势与挑战">优势与挑战</h2> <p>具身智能强调物理智能体与环境之间的主动式交互及智能体的自主进化，持续提升智能体的环境适应性和场景理解能力，并实现更加便捷的人机交互。然而，目前的具身智能研究在智能体学习效率、性能、泛化性方面依然存在巨大挑战，如何设计开放场景通用任务的具身智能系统有待深入研究。</p> <h3 id="优势分析">优势分析</h3> <p>具身智能视角下的机器人需要全面感知、理解其所处的环境，根据任务需求控制其物理实体、做出决策，并通过与外界环境的交互快速调整其行动，基于持续的交互式学习和经验累积自主进化。在以下三个方面展现了优势：</p> <p>（1）多感官精准感知与理解能力。具身智能体通常配备有多种传感器，能够更普遍地通过视觉、听觉、触觉等感官，充分感知其所处场景的物理特性和语义信息，从而做出更精准的决策，实现与场景中其他实体的高效协作。通过更为丰富的传感器，具身智能体相较于普通人工智能载体能够感知到更为全面的环境信息，并借助多模态大模型等算法更好地劣迹所处环境及操作者意图。</p> <p>（2）交互式场景适应与学习能力。具身智能体能够通过姿势、表情、声音、触感等途径与人类及其他物理实体进行交互，并根据环境的变化快速调整自身行为，通过与环境主动交互来更加灵活地适应不同情况和任务。具身智能更加强调智能体在复杂环境中的知识迁移和泛化能力，以及基于具身交互的具体任务调整能力。</p> <p>（3）智能体持续自主进化能力。具身智能涵盖了对智能体持续自主进化能力的需求，通过物理智能体、虚拟智能体、真实环境间的持续交互，不断提升智能系统对复杂环境的长期适应能力。不同于现有人工智能载体在投入使用后不具备自我更新的能力，具身智能体能够在工作中自主地识别训练数据中未出现的样本，并在其数量积累到一定阈值后实现自我学习与进化，通过持续的知识更新影响决策行为，从而实现具身反馈闭环。</p> <h3 id="挑战分析">挑战分析</h3> <p><strong>具身交互</strong>。目前在具身智能领域通常应用具身模拟器来复制物理世界，以开展特定任务的研究和测试，从而避免现实世界数据收集的繁琐劳动。然而，真实世界中的交互学习挑战以及“仿真-现实迁移”技术方面存在的不足，进一步妨碍了具身智能研究成果在现实世界中的应用和部署。更多物体类型的物理交互和传感模拟技术需要突破。</p> <p><strong>具身认知</strong>。现实开放场景通常呈现数据形式多模态、数据质量不可控、数据分布长尾化、数据特性动态漂移等多源不确定性。人类天然地拥有从外部世界的自然模态学习并基于直觉理解物理世界的能力，这种自然习得的认知能力能够有效地对抗现实世界的不确定性，而目前的具身认知方法还不具备从自然模态中学习到关于世界的结构化表征与抽象的能力。</p> <p><strong>具身实体</strong>。具身智能系统制造所需的机械结构和设备较为复杂，并且通常需要配备大量的传感器和执行器。高昂的硬件设备与软件研发成本成为具身智能机器人大规模应用进程中的障碍。尤其当需要实现高度复杂的运动或操作时，涉及机械设计、工程制造等多方面挑战。</p> <h2 id="具身智能的一般性框架">具身智能的一般性框架</h2> <p>具身智能可以被视作由“本体”和“智能体”耦合而成且能够在复杂环境中执行任务的智能系统。相较于传统AI系统，具身智能强调智能系统通过与环境直接交互以更好地适应复杂动态环境，从而在真实的物理环境下执行各种各样的任务。具身智能系统的研发是一个活跃的研究方向，目前飞速进步的传感器技术、机器人感知与运动控制技术、认知推理与大模型技术等都极大地推进和拓展了具身智能系统等设计思路，但当前仍然缺乏对具身智能研究及具身智能系统通用设计方案的讨论。</p> <p>（1）高度泛化的动态环境全感知能力。具身智能系统需要搭载多种传感器多方位获取周围环境的信息，通过物理实体进行主动式感知，并实现即时的动态信息融合与处理。如自动驾驶汽车通常需要配备激光雷达、摄像头、毫米波雷达等多种传感器，对道路、车辆、行人等各种元素进行准确识别和跟踪；人形机器人则需要利用视觉、触觉、听觉等多感官信息对作业环境进行全面感知。有些感知系统还需要进行环境建模和动态地图更新，在这一过程中集成一些基础模型并融入特定领域知识。此外，不同于传统的环境感知技术，具身智能感知需要与环境实时交互，在不同的环境状态下选择不同的传感方式和感知策略，最大化利用多种传感器和感知算法的优势，适应不同的域分布看，在不同复杂度的场景中实现强泛化、精准、高效的感知。</p> <p>（2）稳定可靠的决策规划和控制执行能力。具身智能系统本质上要求智能体具有第一人称主动性，通过与外部环境和其他智能体的主动交互，能自主规划、决策、行动。基于多感官环境信息的综合考虑以及“感知-行动回路”，具身智能系统需要理解外界指令、分解任务、规划子任务，根据需求作出合理的决策，并实时控制智能体的行为，确保安全、可靠地完成物理世界的指定任务，同时需要即时调整控制策略和行为方式以应对外界变化，形成一个感知环境、理解外界、建模世界（世界模型）、采取行动、测试验证 并调整模型的整体过程。</p> <p>（3）长期自主的学习与进化能力。智能体在与外界环境交互的过程中，不断收集新的数据和经验，通过学习和适应，提高自身的性能和智能水平（持续学习？）。结合平行智能与数字孪生的相关思想，可以构建多维度、多层次的仿真系统，在多个虚拟世界中设计和开发具身智能算法，使其能够在虚拟环境中进行大量的学习和训练，并将其迁移到真实世界，提高具身智能系统对动态开放环境的适应能力。</p> <h1 id="研究的关键问题">研究的关键问题</h1> <h2 id="感知-模拟-执行一体化机制">“感知-模拟-执行”一体化机制</h2> <p>在具身智能范式中，智能体被看作一种行为的主体，从类人的角度来看，具身智能体应当是具有动态自适应环境能力、自身想象力、自身行为模式的个体或群体。</p> <p><img src="/assets/img/EIfig3.jpg" alt=""/></p> <p>对于具身感知阶段，需要利用多感官、多源异构的环境交互信息，因此<strong>多模态融合感知</strong>和<strong>领域自适应</strong>是具身感知模块的重要组成部分；在初步感知结果之后，具身模拟阶段可以利用生成式AI、大模型等技术，模拟将采取的行为，并推理可能的未来情景，并进行风险预测，判断是否执行该行为或反馈至感知算法进行感知域与行为的动态调整；具身执行阶段则通过智能体发出的指令对本体进行控制与决策，如移动机器人轨迹规划、运动控制等。目前，在以自动驾驶为代表的移动机器人领域中已涌现出一批感知-规划端到端的研究成果。</p> <h2 id="具身感知关键技术">具身感知关键技术</h2> <p>相较于传统感知方法，具身感知强调智能所获取的信息是基于环境交互的全方位信息，不仅来源于视觉、听觉、触觉等多传感器等输入，还依赖于具身交互下所获取的场景状态信息，并在不同的环境条件下均可获得稳定可靠的感知结果。因此，多模态融合感知和领域自适应式不可或缺的关键技术。</p> <h3 id="多模态融合感知">多模态融合感知</h3> <p>多模态融合感知方法将来自不同传感器或数据源的信息融合在一起，通过不同传感器的优势来弥补单一传感器的局限性，从而提供更加全面和准确的感知结果，被广泛应用于3D目标检测和多目标跟踪等任务中。但现有的多模态融合感知算法对多感官数据的利用并不充分，同时与动态神经网络的结合仍处于探索阶段，如何实现真正的具身感知有待深入研究。</p> <h3 id="领域自适应">领域自适应</h3> <p>领域自适应是与机器学习和迁移学习紧密相关的领域，其基本思想是通过学习源域与目标域之间的差异，实现从源域到目标域到迁移。源域和目标域可以是不同的数据集、不同的任务或不同的场景，现有的领域自适应方法可分为数据优化方法和模型优化方法两类。</p> <p>数据优化方法分为基于伪标签的自训练、图像翻译和域随机化。基于伪标签的自训练时一种同时从无标签数据和标签数据中学习的监督范式，模型首先通过标记数据进行训练，将模型对目标域数据的高置信度预测视为伪标签；图像翻译方法例如CycleGAN，将目标域图像映射到类似源域图像，有效降低了图像信息的分布差异；域随机化方法通过创建各种具有随机属性的模拟环境，去除模型对源域特定风格的依赖。</p> <p>模型优化方法分为域不变性特征学习、均值教师机训练和图推理。域不变性特征学习通过在目标检测模型中引入域判别器，从而进行对抗训练；均值教师机训练方法克服了时序集成的低效，利用无标签数据和平均模型权重加速教师-学生机之间的反馈循环，从而提升精度；图推理方法建模图像内多个对象之间的相互关系，在目标检测任务中有独特优势。</p> <h2 id="具身模拟关键技术">具身模拟关键技术</h2> <p>具身模拟阶段强调智能体从“场景感知”到“情境认知”的能力，即能够充分理解当前环境，并融合轨迹预测、行为预测、大模型等多元技术，推理或预判未来时刻的种种情况，深入洞察智能体可能面临的风险，为智能体提供及时反馈以引导智能体行动规划并动态自适应环境变化。</p> <h3 id="风险预测">风险预测</h3> <p>风险预测在具身模拟阶段发挥重要作用，通过对当前环境及未来时刻的情况进行预测，结合轨迹预测与行为预测等多种方式，实现对智能体的风险感知，确定重点区域，反馈至感知系统并作出相应决策。</p> <p>具身模拟阶段需要结合多种预测方式感知智能体行为风险，通过模拟智能体在不同环境中的行为模式，确定潜在的风险感知域，并预测智能体在特定环境下可行的反应和决策，即实现从“场景感知”到“情境认知”, 为具身执行提供重要的依据。</p> <h3 id="aigc">AIGC</h3> <p>AIGC相关技术和物理仿真环境能够为具身模拟提供真实物理世界的替代，极大加快具身学习的速度。如何缩小真实世界与仿真模拟环境之间的差距一直是AIGC领域重点解决的一个问题，解决方案主要包括基于学习的AIGC方法以及基于物理的AIGC方法。</p> <p>基于学习的AIGC指利用深度学习技术实现内容生成，常见方法包括扩散模型和Transformer架构模型等。扩散模型通过逐步添加噪声并学习去噪过程来生成图像，Stable Diffusion在这一过程中加入了稳定性和高效性的改进，使得模型在生成高分辨率图像时仍能保持较为真实的生成效果。Imagen则通过结合扩散模型与大模型预训练的语言模型，实现了文本描述到高质量图像的转换。Transformer模型利用自注意力机制，可以处理长距离依赖关系，因而在文生图任务中表现出色。</p> <p>基于物理的AIGC通过将物理先验知识引入生成框架，使预训练的模型生成的内容更接近于真实世界。这种方法主要结合了物理模型与机器学习技术，以确保生成的内容不仅在视觉上逼真，而且符合现实世界物理规律。如GIRAFFE算法通过引入物理先验知识并结合递归反馈机制，从而能够生成复合物理规律的三维场景，并在处理复杂的光照和材质时表现优异。物理先验知识的加入也极大地提升了智能体的预测模拟能力，如高斯-粒子双重表示法，将视觉与物理信息结合，从而使机器人在与现实世界交互时能够准确预测未来状态。</p> <p>目前较为主流和前沿的技术一般考虑上述两者的结合，利用模型去学习不同的物理属性和物理规律，将基于AIGC的仿真引擎和表征具身常识的基础模型接入智能体，不仅使得智能体能够与环境有效交互，还能够在无需额外数据和训练的情况下完成各种任务。</p> <h2 id="具身执行关键技术">具身执行关键技术</h2> <p>如何将具身智能体对外界环境的感知和认知结果转化为行动是具身执行阶段的核心。具身智能体的行动主要可分为移动(如智能体轨迹规划与优化)和操作(如物体抓取与操纵等执行部件的运动控制)。</p> <h1 id="具身学习与进化研究的关键问题">具身学习与进化研究的关键问题</h1> <p>具身智能强调智能体以模拟生物形态的形式与复杂环境交互各类信息，同时利用这类信息实现自身的更新优化以达到长期自主工作的能力。因此，除了感知与执行外，智能体的学习与进化研究同样中阿哟。根据形态-行为-学习这一具身智能体系理论，智能体应当通过学习进化提升行为、优化形态。学习优化是进化的基础，而进化遗传是学习的体现。通过自主感知获取环境的各类信息，智能体在优化自身行为策略的同时产生形态优化策略，这一过程可以被视为寻找在当前环境下执行特定任务时的最优解过程，将泛化性强的行为和形态策略作为预训练模型或先验知识共享给其他智能体， 在新的智能体上继续学习优化使其适应更复杂的环境或任务要求，实现学习与进化的共同促进。</p> <h1 id="总结与展望">总结与展望</h1> <h2 id="虚实融合数据智能">虚实融合数据智能</h2> <p>在真实世界中采集具身感知和学习相关的数据集存在较高代价，尤其是某些特殊场景或任务(如自动驾驶长尾场景)容易不可避免地引入成本高昂甚至危险的实时交互，难以规模化。目前，相关研究人员聚焦于在虚拟仿真系统中设计和开发具身智能算法，然后将其迁移到现实物理世界，如具身导航[143]、具身问答[144]、智能体/机器人操作任务[145−146]等。 针对不同的环境或任务需求，已涌现出多种虚拟仿真平台、数据集、任务和学习框架, 为具身智能研究提供有效的数据平台(也可以称为具身智能模拟器). 如面向具身导航任务的iGibson[147−148]系列、Habitat[149−150]、MultiON[151]、BEHAVIOR[112−152], 面向具身问答的ALFRED[144], 面向智能体/机器人操作任务(如家具重排、物体抓取等)的AI2-THOR[153]、ThreeDWorld[154−155]、Habitat 2.0[156]等虚拟仿真环境. 然而, 目前的具身智能模拟器在逼真度、可扩展性和互动性等方面仍然存在较大挑战, 进一步妨碍了具身智能研究成果在现实世界中的应用和部署. 此外, 只有少数具身智能模拟器[153−155]配备了多智能体设置, 因此针对多智能体特性的研究任务仍然较少.</p> <p>总体来看, 高质量的具身任务数据集、更逼真高效的具身模拟器、人类示范数据的有效利用以及更有效的虚实迁移技术对于具身智能的物理实现有着重要意义. 如何利用计算机图形学、虚拟仿真引擎、计算机视觉等领域的前沿技术提升虚拟数据平台的逼真度, 以及引入更多的现实世界数据集并有效利用人类演示数据来训练和优化机器人系统, 探索更多虚拟环境与真实环境之间的迁移及域适应技术, 是未来具身智能发展需要考虑的重点问题.</p> <h2 id="基础模型与基础智能">基础模型与基础智能</h2> <p>自以GPT4等为代表的多模态基础模型发布以来, 国内外掀起了一波新的研究热潮, 并逐渐形成了“百模大战”的井喷式局面. 基础智能可以理解为通过将更深层次的智能融入基础模型中, 进一步提升模型的智能水平, 以便在智能决策与推理等方面展示出更高的性能. 首先, 在通用基础模型方面, 国内各具特色的大模型层出不穷. 例如, 在工业界, 百度、阿里云、华为、腾讯、科大讯飞、月之暗面等相继提出了各自的通用大模型; 在学术界, 清华大学、北京大学、中国科学院自动化研究所、北京智源研究院、上海人工智能实验室等也纷纷提出了具有创新性的大模型. 除了研究通用基础模型外, 国内已有一些研究开始探索如何将基础模型与特定领域相结合, 构建特殊场景下的工业基础模型. 比如, 基于39年的全球气象数据, 华为盘古气象基础模型开发了实时气象预测系统, 在预测精度上超越了传统的基于数值的预测方法[157]; 中煤科工西安研究院构建了地质垂直领域的基础模型GeoGPT, 实现了地质行业知识的问答; 华南理工大学构建了医疗模型扁鹊BianQue, 用于生理健康诊断问答. 因此, 通过引入基础模型和基础智能, 处于复杂CPSS (Cyber-physical-social systems)[158−159]环境中的具身智能可以进行更加准确的感知、推理及决策, 逐步实现从“被动控制”到“主动感知”的范式转移.</p> <p>总体来看, 复杂环境理解与认知能力、强适应可扩展的基础模型架构、安全可靠的具身智能体运行模式对于具身智能系统的实际应用有着重要意义. 如何提升具身智能体对复杂环境中长期任务的理解, 如何提高多模态具身智能体在复杂现实环境中的适应性、决策可靠性和泛化能力, 并保证具身智能体能够以可解释、可交互、可持续的方式在现实环境中运行, 如何利用基础模型及基础智能来构建具备强大感知能力和大量世界知识的高效智能机器将是未来研究的关键问题.</p> <h2 id="数字孪生与平行智能">数字孪生与平行智能</h2> <p>对于具身智能来说, 如何与包含复杂社会因素的环境进行高效交互是其实现“自我进化”的重要手段. 在传统的基于数字孪生的物理环境建模中, 其主要目的在于实现对物理空间中实体的高度数字化, 完成物理空间与虚拟空间的1:1映射. 但是, 由此构建的虚拟系统并不能灵活地应对物理世界的各种变化, 具有一定的局限性. 为了解决上述问题, 平行智能理论将成为具身智能未来研究的主要内容. 平行智能理论[160−162]已经被成功应用到包含交通、制造、医疗、农业等在内的各个领域[163−170]. 平行系统可以理解为由某一个自然的物理系统和对应的一个或多个虚拟或理想的人工系统所组成的共同系统[171−172]. 通过构建物理空间与虚拟空间的N:M映射, 平行智能理论可以通过ACP (Artificial systems, computational experiments and parallel executions)方法实现对包含社会因素的复杂环境的高效管理与控制. 区别于传统的特征工程, 在构建人工系统方面, 平行智能理论采用场景工程(Scenarios engineering)建模的方法来构建更加具有可解释性的人工系统[173]. 基于I&amp;I (Intelligence &amp; index)、C&amp;C (Calibration &amp; certification) 和V&amp;V (Verification &amp; validation), 场景工程建模可以理解为在特定时间和空间内对相关场景和活动的综合反映[174]. 此外, 通过平行执行, 人工系统与物理系统能够实现虚实交互和闭环反馈, 不仅提高了复杂物理系统的决策水平, 还为应对未来场景的发展和变化做好了充分的准备[175].</p> <p>总体来看, 在具身智能的研究中引入平行智能理论, 不仅可以构建更加可靠和可解释性的人工系统, 为其应对复杂多变的物理环境提供有力的技术支撑, 还有助于促进具身智能与周围环境的交互和学习, 大幅提升具身智能系统的感知与决策能力. 进一步地, 如何考虑以增量学习、在线自适应和人在环路学习为代表的持续学习技术, 以减轻灾难性遗忘并增强系统稳定性, 从而构建更加可信的具身智能系统, 如何建立和统一具身智能任务的评估基准, 以及如何全面综合地衡量机器人执行长期任务的成功率和智能系统的能力, 也是未来有待探索的重点问题.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="paper"/><summary type="html"><![CDATA[overview]]></summary></entry><entry><title type="html">a post with tabs</title><link href="https://yaochao1986.github.io/blog/2024/tabs/" rel="alternate" type="text/html" title="a post with tabs"/><published>2024-05-01T00:32:13+00:00</published><updated>2024-05-01T00:32:13+00:00</updated><id>https://yaochao1986.github.io/blog/2024/tabs</id><content type="html" xml:base="https://yaochao1986.github.io/blog/2024/tabs/"><![CDATA[<p>This is how a post with <a href="https://github.com/Ovski4/jekyll-tabs">tabs</a> looks like. Note that the tabs could be used for different purposes, not only for code.</p> <h2 id="first-tabs">First tabs</h2> <p>To add tabs, use the following syntax:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">tabs</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-1</span><span class="w"> </span><span class="cp">%}</span>

Content 1

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-2</span><span class="w"> </span><span class="cp">%}</span>

Content 2

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtabs</span><span class="w"> </span><span class="cp">%}</span>
</code></pre></div></div> <p>With this you can generate visualizations like:</p> <ul id="log" class="tab" data-tab="54f41cb5-0db0-4573-b341-7d2db7602741" data-name="log"> <li class="active" id="log-php"> <a href="#">php </a> </li> <li id="log-js"> <a href="#">js </a> </li> <li id="log-ruby"> <a href="#">ruby </a> </li> </ul> <ul class="tab-content" id="54f41cb5-0db0-4573-b341-7d2db7602741" data-name="log"> <li class="active"> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">var_dump</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">pputs</span> <span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span>
</code></pre></div></div> </li> </ul> <h2 id="another-example">Another example</h2> <ul id="data-struct" class="tab" data-tab="2e21e7b6-2643-4ba8-91c8-cdad392d7d99" data-name="data-struct"> <li class="active" id="data-struct-yaml"> <a href="#">yaml </a> </li> <li id="data-struct-json"> <a href="#">json </a> </li> </ul> <ul class="tab-content" id="2e21e7b6-2643-4ba8-91c8-cdad392d7d99" data-name="data-struct"> <li class="active"> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">hello</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">whatsup"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">hi"</span>
</code></pre></div></div> </li> <li> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"hello"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"whatsup"</span><span class="p">,</span><span class="w"> </span><span class="s2">"hi"</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> </li> </ul> <h2 id="tabs-for-something-else">Tabs for something else</h2> <ul id="something-else" class="tab" data-tab="6ba46dcb-e757-42af-af26-4b0215694a53" data-name="something-else"> <li class="active" id="something-else-text"> <a href="#">text </a> </li> <li id="something-else-quote"> <a href="#">quote </a> </li> <li id="something-else-list"> <a href="#">list </a> </li> </ul> <ul class="tab-content" id="6ba46dcb-e757-42af-af26-4b0215694a53" data-name="something-else"> <li class="active"> <p>Regular text</p> </li> <li> <blockquote> <p>A quote</p> </blockquote> </li> <li> <p>Hipster list</p> <ul> <li>brunch</li> <li>fixie</li> <li>raybans</li> <li>messenger bag</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included tabs in a post could look like]]></summary></entry><entry><title type="html">a post with typograms</title><link href="https://yaochao1986.github.io/blog/2024/typograms/" rel="alternate" type="text/html" title="a post with typograms"/><published>2024-04-29T23:36:10+00:00</published><updated>2024-04-29T23:36:10+00:00</updated><id>https://yaochao1986.github.io/blog/2024/typograms</id><content type="html" xml:base="https://yaochao1986.github.io/blog/2024/typograms/"><![CDATA[<p>This is an example post with some <a href="https://github.com/google/typograms/">typograms</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">+----+
|    |---&gt; My first diagram!
+----+</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-typograms">+----+
|    |---&gt; My first diagram!
+----+
</code></pre> <p>Another example:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.</span>
<span class="p">```</span>
</code></pre></div></div> <p>which generates:</p> <pre><code class="language-typograms">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.
</code></pre> <p>For more examples, check out the <a href="https://google.github.io/typograms/#examples">typograms documentation</a>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[this is what included typograms code could look like]]></summary></entry><entry><title type="html">a post that can be cited</title><link href="https://yaochao1986.github.io/blog/2024/post-citation/" rel="alternate" type="text/html" title="a post that can be cited"/><published>2024-04-28T15:06:00+00:00</published><updated>2024-04-28T15:06:00+00:00</updated><id>https://yaochao1986.github.io/blog/2024/post-citation</id><content type="html" xml:base="https://yaochao1986.github.io/blog/2024/post-citation/"><![CDATA[<p>This is an example post that can be cited. The content of the post ends here, while the citation information is automatically provided below. The only thing needed is for you to set the <code class="language-plaintext highlighter-rouge">citation</code> key in the front matter to <code class="language-plaintext highlighter-rouge">true</code>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="citation"/><summary type="html"><![CDATA[this is what a post that can be cited looks like]]></summary></entry><entry><title type="html">a post with pseudo code</title><link href="https://yaochao1986.github.io/blog/2024/pseudocode/" rel="alternate" type="text/html" title="a post with pseudo code"/><published>2024-04-15T00:01:00+00:00</published><updated>2024-04-15T00:01:00+00:00</updated><id>https://yaochao1986.github.io/blog/2024/pseudocode</id><content type="html" xml:base="https://yaochao1986.github.io/blog/2024/pseudocode/"><![CDATA[<p>This is an example post with some pseudo code rendered by <a href="https://github.com/SaswatPadhi/pseudocode.js">pseudocode</a>. The example presented here is the same as the one in the <a href="https://saswat.padhi.me/pseudocode.js/">pseudocode.js</a> documentation, with only one simple but important change: everytime you would use <code class="language-plaintext highlighter-rouge">$</code>, you should use <code class="language-plaintext highlighter-rouge">$$</code> instead. Also, note that the <code class="language-plaintext highlighter-rouge">pseudocode</code> key in the front matter is set to <code class="language-plaintext highlighter-rouge">true</code> to enable the rendering of pseudo code. As an example, using this code:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">pseudocode
</span><span class="sb">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Generates:</p> <pre><code class="language-pseudocode">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included pseudo code could look like]]></summary></entry><entry><title type="html">a post with code diff</title><link href="https://yaochao1986.github.io/blog/2024/code-diff/" rel="alternate" type="text/html" title="a post with code diff"/><published>2024-01-27T19:22:00+00:00</published><updated>2024-01-27T19:22:00+00:00</updated><id>https://yaochao1986.github.io/blog/2024/code-diff</id><content type="html" xml:base="https://yaochao1986.github.io/blog/2024/code-diff/"><![CDATA[<p>You can display diff code by using the regular markdown syntax:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff
</span><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")
</span></code></pre></div></div> <p>But this is difficult to read, specially if you have a large diff. You can use <a href="https://diff2html.xyz/">diff2html</a> to display a more readable version of the diff. For this, just use <code class="language-plaintext highlighter-rouge">diff2html</code> instead of <code class="language-plaintext highlighter-rouge">diff</code> for the code block language:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff2html
</span><span class="sb">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
--- a/sample.js
+++ b/sample.js
@@ -1 +1 @@
-console.log("Hello World!")
+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>If we use a longer example, for example <a href="https://github.com/rtfpessoa/diff2html/commit/c2c253d3e3f8b8b267f551e659f72b44ca2ac927">this commit from diff2html</a>, it will generate the following output:</p> <pre><code class="language-diff2html">From 2aaae31cc2a37bfff83430c2c914b140bee59b6a Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sun, 9 Oct 2016 16:41:54 +0100
Subject: [PATCH 1/2] Initial template override support

---
 scripts/hulk.js                    |  4 ++--
 src/diff2html.js                   |  3 +--
 src/file-list-printer.js           | 11 ++++++++---
 src/hoganjs-utils.js               | 29 +++++++++++++++++------------
 src/html-printer.js                |  6 ++++++
 src/line-by-line-printer.js        |  6 +++++-
 src/side-by-side-printer.js        |  6 +++++-
 test/file-list-printer-tests.js    |  2 +-
 test/hogan-cache-tests.js          | 18 +++++++++++++++---
 test/line-by-line-tests.js         |  3 +--
 test/side-by-side-printer-tests.js |  3 +--
 11 files changed, 62 insertions(+), 29 deletions(-)

diff --git a/scripts/hulk.js b/scripts/hulk.js
index 5a793c18..a4b1a4d5 100755
--- a/scripts/hulk.js
+++ b/scripts/hulk.js
@@ -173,11 +173,11 @@ function namespace(name) {
 // write a template foreach file that matches template extension
 templates = extractFiles(options.argv.remain)
   .map(function(file) {
-    var openedFile = fs.readFileSync(file, 'utf-8');
+    var openedFile = fs.readFileSync(file, 'utf-8').trim();
     var name;
     if (!openedFile) return;
     name = namespace(path.basename(file).replace(/\..*$/, ''));
-    openedFile = removeByteOrderMark(openedFile.trim());
+    openedFile = removeByteOrderMark(openedFile);
     openedFile = wrap(file, name, openedFile);
     if (!options.outputdir) return openedFile;
     fs.writeFileSync(path.join(options.outputdir, name + '.js')
diff --git a/src/diff2html.js b/src/diff2html.js
index 21b0119e..64e138f5 100644
--- a/src/diff2html.js
+++ b/src/diff2html.js
@@ -7,7 +7,6 @@

 (function() {
   var diffParser = require('./diff-parser.js').DiffParser;
-  var fileLister = require('./file-list-printer.js').FileListPrinter;
   var htmlPrinter = require('./html-printer.js').HtmlPrinter;

   function Diff2Html() {
@@ -43,7 +42,7 @@

     var fileList = '';
     if (configOrEmpty.showFiles === true) {
-      fileList = fileLister.generateFileList(diffJson, configOrEmpty);
+      fileList = htmlPrinter.generateFileListSummary(diffJson, configOrEmpty);
     }

     var diffOutput = '';
diff --git a/src/file-list-printer.js b/src/file-list-printer.js
index e408d9b2..1e0a2c61 100644
--- a/src/file-list-printer.js
+++ b/src/file-list-printer.js
@@ -8,11 +8,16 @@
 (function() {
   var printerUtils = require('./printer-utils.js').PrinterUtils;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var baseTemplatesPath = 'file-summary';
   var iconsBaseTemplatesPath = 'icon';

-  function FileListPrinter() {
+  function FileListPrinter(config) {
+    this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   FileListPrinter.prototype.generateFileList = function(diffFiles) {
@@ -38,5 +43,5 @@
     });
   };

-  module.exports.FileListPrinter = new FileListPrinter();
+  module.exports.FileListPrinter = FileListPrinter;
 })();
diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 9949e5fa..0dda08d7 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -8,18 +8,19 @@
 (function() {
   var fs = require('fs');
   var path = require('path');
-
   var hogan = require('hogan.js');

   var hoganTemplates = require('./templates/diff2html-templates.js');

-  var templatesPath = path.resolve(__dirname, 'templates');
+  var extraTemplates;

-  function HoganJsUtils() {
+  function HoganJsUtils(configuration) {
+    this.config = configuration || {};
+    extraTemplates = this.config.templates || {};
   }

-  HoganJsUtils.prototype.render = function(namespace, view, params, configuration) {
-    var template = this.template(namespace, view, configuration);
+  HoganJsUtils.prototype.render = function(namespace, view, params) {
+    var template = this.template(namespace, view);
     if (template) {
       return template.render(params);
     }
@@ -27,17 +28,16 @@
     return null;
   };

-  HoganJsUtils.prototype.template = function(namespace, view, configuration) {
-    var config = configuration || {};
+  HoganJsUtils.prototype.template = function(namespace, view) {
     var templateKey = this._templateKey(namespace, view);

-    return this._getTemplate(templateKey, config);
+    return this._getTemplate(templateKey);
   };

-  HoganJsUtils.prototype._getTemplate = function(templateKey, config) {
+  HoganJsUtils.prototype._getTemplate = function(templateKey) {
     var template;

-    if (!config.noCache) {
+    if (!this.config.noCache) {
       template = this._readFromCache(templateKey);
     }

@@ -53,6 +53,7 @@

     try {
       if (fs.readFileSync) {
+        var templatesPath = path.resolve(__dirname, 'templates');
         var templatePath = path.join(templatesPath, templateKey);
         var templateContent = fs.readFileSync(templatePath + '.mustache', 'utf8');
         template = hogan.compile(templateContent);
@@ -66,12 +67,16 @@
   };

   HoganJsUtils.prototype._readFromCache = function(templateKey) {
-    return hoganTemplates[templateKey];
+    return extraTemplates[templateKey] || hoganTemplates[templateKey];
   };

   HoganJsUtils.prototype._templateKey = function(namespace, view) {
     return namespace + '-' + view;
   };

-  module.exports.HoganJsUtils = new HoganJsUtils();
+  HoganJsUtils.prototype.compile = function(templateStr) {
+    return hogan.compile(templateStr);
+  };
+
+  module.exports.HoganJsUtils = HoganJsUtils;
 })();
diff --git a/src/html-printer.js b/src/html-printer.js
index 585d5b66..13f83047 100644
--- a/src/html-printer.js
+++ b/src/html-printer.js
@@ -8,6 +8,7 @@
 (function() {
   var LineByLinePrinter = require('./line-by-line-printer.js').LineByLinePrinter;
   var SideBySidePrinter = require('./side-by-side-printer.js').SideBySidePrinter;
+  var FileListPrinter = require('./file-list-printer.js').FileListPrinter;

   function HtmlPrinter() {
   }
@@ -22,5 +23,10 @@
     return sideBySidePrinter.generateSideBySideJsonHtml(diffFiles);
   };

+  HtmlPrinter.prototype.generateFileListSummary = function(diffJson, config) {
+    var fileListPrinter = new FileListPrinter(config);
+    return fileListPrinter.generateFileList(diffJson);
+  };
+
   module.exports.HtmlPrinter = new HtmlPrinter();
 })();
diff --git a/src/line-by-line-printer.js b/src/line-by-line-printer.js
index b07eb53c..d230bedd 100644
--- a/src/line-by-line-printer.js
+++ b/src/line-by-line-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'line-by-line';
   var iconsBaseTemplatesPath = 'icon';
@@ -19,6 +20,9 @@

   function LineByLinePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   LineByLinePrinter.prototype.makeFileDiffHtml = function(file, diffs) {
diff --git a/src/side-by-side-printer.js b/src/side-by-side-printer.js
index bbf1dc8d..5e3033b3 100644
--- a/src/side-by-side-printer.js
+++ b/src/side-by-side-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'side-by-side';
   var iconsBaseTemplatesPath = 'icon';
@@ -26,6 +27,9 @@

   function SideBySidePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   SideBySidePrinter.prototype.makeDiffHtml = function(file, diffs) {
diff --git a/test/file-list-printer-tests.js b/test/file-list-printer-tests.js
index a502a46f..60ea3208 100644
--- a/test/file-list-printer-tests.js
+++ b/test/file-list-printer-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var fileListPrinter = require('../src/file-list-printer.js').FileListPrinter;
+var fileListPrinter = new (require('../src/file-list-printer.js').FileListPrinter)();

 describe('FileListPrinter', function() {
   describe('generateFileList', function() {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 190bf6f8..3bb754ac 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var HoganJsUtils = require('../src/hoganjs-utils.js').HoganJsUtils;
+var HoganJsUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)();
 var diffParser = require('../src/diff-parser.js').DiffParser;

 describe('HoganJsUtils', function() {
@@ -21,16 +21,28 @@ describe('HoganJsUtils', function() {
       });
       assert.equal(emptyDiffHtml, result);
     });
+
     it('should render view without cache', function() {
       var result = HoganJsUtils.render('generic', 'empty-diff', {
         contentClass: 'd2h-code-line',
         diffParser: diffParser
       }, {noCache: true});
-      assert.equal(emptyDiffHtml + '\n', result);
+      assert.equal(emptyDiffHtml, result);
     });
+
     it('should return null if template is missing', function() {
-      var result = HoganJsUtils.render('generic', 'missing-template', {}, {noCache: true});
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)({noCache: true});
+      var result = hoganUtils.render('generic', 'missing-template', {});
       assert.equal(null, result);
     });
+
+    it('should allow templates to be overridden', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+
+      var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
diff --git a/test/line-by-line-tests.js b/test/line-by-line-tests.js
index 1cd92073..8869b3df 100644
--- a/test/line-by-line-tests.js
+++ b/test/line-by-line-tests.js
@@ -14,7 +14,7 @@ describe('LineByLinePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expected, fileHtml);
     });
@@ -422,7 +422,6 @@ describe('LineByLinePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                &lt;/tbody&gt;\n' +
         '            &lt;/table&gt;\n' +
         '        &lt;/div&gt;\n' +
diff --git a/test/side-by-side-printer-tests.js b/test/side-by-side-printer-tests.js
index 76625f8e..771daaa5 100644
--- a/test/side-by-side-printer-tests.js
+++ b/test/side-by-side-printer-tests.js
@@ -14,7 +14,7 @@ describe('SideBySidePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expectedRight, fileHtml.right);
       assert.equal(expectedLeft, fileHtml.left);
@@ -324,7 +324,6 @@ describe('SideBySidePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                    &lt;/tbody&gt;\n' +
         '                &lt;/table&gt;\n' +
         '            &lt;/div&gt;\n' +

From f3cadb96677d0eb82fc2752dc3ffbf35ca9b5bdb Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sat, 15 Oct 2016 13:21:22 +0100
Subject: [PATCH 2/2] Allow uncompiled templates

---
 README.md                 |  3 +++
 src/hoganjs-utils.js      |  7 +++++++
 test/hogan-cache-tests.js | 24 +++++++++++++++++++++++-
 3 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 132c8a28..46909f25 100644
--- a/README.md
+++ b/README.md
@@ -98,6 +98,9 @@ The HTML output accepts a Javascript object with configuration. Possible options
   - `synchronisedScroll`: scroll both panes in side-by-side mode: `true` or `false`, default is `false`
   - `matchWordsThreshold`: similarity threshold for word matching, default is 0.25
   - `matchingMaxComparisons`: perform at most this much comparisons for line matching a block of changes, default is `2500`
+  - `templates`: object with previously compiled templates to replace parts of the html
+  - `rawTemplates`: object with raw not compiled templates to replace parts of the html
+  &gt; For more information regarding the possible templates look into [src/templates](https://github.com/rtfpessoa/diff2html/tree/master/src/templates)

 ## Diff2HtmlUI Helper

diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 0dda08d7..b2e9c275 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -17,6 +17,13 @@
   function HoganJsUtils(configuration) {
     this.config = configuration || {};
     extraTemplates = this.config.templates || {};
+
+    var rawTemplates = this.config.rawTemplates || {};
+    for (var templateName in rawTemplates) {
+      if (rawTemplates.hasOwnProperty(templateName)) {
+        if (!extraTemplates[templateName]) extraTemplates[templateName] = this.compile(rawTemplates[templateName]);
+      }
+    }
   }

   HoganJsUtils.prototype.render = function(namespace, view, params) {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 3bb754ac..a34839c0 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -36,7 +36,7 @@ describe('HoganJsUtils', function() {
       assert.equal(null, result);
     });

-    it('should allow templates to be overridden', function() {
+    it('should allow templates to be overridden with compiled templates', function() {
       var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');

       var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
@@ -44,5 +44,27 @@ describe('HoganJsUtils', function() {
       var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
       assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
     });
+
+    it('should allow templates to be overridden with uncompiled templates', function() {
+      var emptyDiffTemplate = '&lt;p&gt;&lt;/p&gt;';
+
+      var config = {rawTemplates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
+
+    it('should allow templates to be overridden giving priority to compiled templates', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+      var emptyDiffTemplateUncompiled = '&lt;p&gt;Not used!&lt;/p&gt;';
+
+      var config = {
+        templates: {'generic-empty-diff': emptyDiffTemplate},
+        rawTemplates: {'generic-empty-diff': emptyDiffTemplateUncompiled}
+      };
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is how you can display code diffs]]></summary></entry><entry><title type="html">a post with advanced image components</title><link href="https://yaochao1986.github.io/blog/2024/advanced-images/" rel="alternate" type="text/html" title="a post with advanced image components"/><published>2024-01-27T11:46:00+00:00</published><updated>2024-01-27T11:46:00+00:00</updated><id>https://yaochao1986.github.io/blog/2024/advanced-images</id><content type="html" xml:base="https://yaochao1986.github.io/blog/2024/advanced-images/"><![CDATA[<p>This is an example post with advanced image components.</p> <h2 id="image-slider">Image Slider</h2> <p>This is a simple image slider. It uses the <a href="https://swiperjs.com/">Swiper</a> library. Check the <a href="https://swiperjs.com/demos">examples page</a> for more information of what you can achieve with it.</p> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/9-480.webp 480w,/assets/img/9-800.webp 800w,/assets/img/9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/7-480.webp 480w,/assets/img/7-800.webp 800w,/assets/img/7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/8-480.webp 480w,/assets/img/8-800.webp 800w,/assets/img/8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/10-480.webp 480w,/assets/img/10-800.webp 800w,/assets/img/10-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/12-480.webp 480w,/assets/img/12-800.webp 800w,/assets/img/12-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> <h2 id="image-comparison-slider">Image Comparison Slider</h2> <p>This is a simple image comparison slider. It uses the <a href="https://img-comparison-slider.sneas.io/">img-comparison-slider</a> library. Check the <a href="https://img-comparison-slider.sneas.io/examples.html">examples page</a> for more information of what you can achieve with it.</p> <img-comparison-slider> <figure slot="first"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic-480.webp 480w,/assets/img/prof_pic-800.webp 800w,/assets/img/prof_pic-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/prof_pic.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure slot="second"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic_color-480.webp 480w,/assets/img/prof_pic_color-800.webp 800w,/assets/img/prof_pic_color-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/prof_pic_color.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </img-comparison-slider>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what advanced image components could look like]]></summary></entry><entry><title type="html">a post with vega lite</title><link href="https://yaochao1986.github.io/blog/2024/vega-lite/" rel="alternate" type="text/html" title="a post with vega lite"/><published>2024-01-27T00:20:00+00:00</published><updated>2024-01-27T00:20:00+00:00</updated><id>https://yaochao1986.github.io/blog/2024/vega-lite</id><content type="html" xml:base="https://yaochao1986.github.io/blog/2024/vega-lite/"><![CDATA[<p>This is an example post with some <a href="https://vega.github.io/vega-lite/">vega lite</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">vega_lite
</span><span class="sb">{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "data": {
    "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json"
  },
  "transform": [
    {"filter": "datum['IMDB Rating'] != null"},
    {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},
    {
      "joinaggregate": [{
        "op": "mean",
        "field": "IMDB Rating",
        "as": "AverageRating"
      }]
    },
    {
      "calculate": "datum['IMDB Rating'] - datum.AverageRating",
      "as": "RatingDelta"
    }
  ],
  "mark": "point",
  "encoding": {
    "x": {
      "field": "Release Date",
      "type": "temporal"
    },
    "y": {
      "field": "RatingDelta",
      "type": "quantitative",
      "title": "Rating Delta"
    },
    "color": {
      "field": "RatingDelta",
      "type": "quantitative",
      "scale": {"domainMid": 0},
      "title": "Rating Delta"
    }
  }
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-vega_lite">{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "data": {
    "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json"
  },
  "transform": [
    {"filter": "datum['IMDB Rating'] != null"},
    {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},
    {
      "joinaggregate": [{
        "op": "mean",
        "field": "IMDB Rating",
        "as": "AverageRating"
      }]
    },
    {
      "calculate": "datum['IMDB Rating'] - datum.AverageRating",
      "as": "RatingDelta"
    }
  ],
  "mark": "point",
  "encoding": {
    "x": {
      "field": "Release Date",
      "type": "temporal"
    },
    "y": {
      "field": "RatingDelta",
      "type": "quantitative",
      "title": "Rating Delta"
    },
    "color": {
      "field": "RatingDelta",
      "type": "quantitative",
      "scale": {"domainMid": 0},
      "title": "Rating Delta"
    }
  }
}
</code></pre> <p>This plot supports both light and dark themes.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included vega lite code could look like]]></summary></entry><entry><title type="html">a post with geojson</title><link href="https://yaochao1986.github.io/blog/2024/geojson-map/" rel="alternate" type="text/html" title="a post with geojson"/><published>2024-01-26T17:57:00+00:00</published><updated>2024-01-26T17:57:00+00:00</updated><id>https://yaochao1986.github.io/blog/2024/geojson-map</id><content type="html" xml:base="https://yaochao1986.github.io/blog/2024/geojson-map/"><![CDATA[<p>This is an example post with some <a href="https://geojson.org/">geojson</a> code. The support is provided thanks to <a href="https://leafletjs.com/">Leaflet</a>. To create your own visualization, go to <a href="https://geojson.io/">geojson.io</a>.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">geojson
</span><span class="sb">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-geojson">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><category term="maps"/><summary type="html"><![CDATA[this is what included geojson code could look like]]></summary></entry><entry><title type="html">a post with echarts</title><link href="https://yaochao1986.github.io/blog/2024/echarts/" rel="alternate" type="text/html" title="a post with echarts"/><published>2024-01-26T16:03:00+00:00</published><updated>2024-01-26T16:03:00+00:00</updated><id>https://yaochao1986.github.io/blog/2024/echarts</id><content type="html" xml:base="https://yaochao1986.github.io/blog/2024/echarts/"><![CDATA[<p>This is an example post with some <a href="https://echarts.apache.org/">echarts</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">echarts
</span><span class="sb">{
  "title": {
    "text": "ECharts Getting Started Example"
  },
  "responsive": true,
  "tooltip": {},
  "legend": {
    "top": "30px",
    "data": ["sales"]
  },
  "xAxis": {
    "data": ["Shirts", "Cardigans", "Chiffons", "Pants", "Heels", "Socks"]
  },
  "yAxis": {},
  "series": [
    {
      "name": "sales",
      "type": "bar",
      "data": [5, 20, 36, 10, 10, 20]
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-echarts">{
  "title": {
    "text": "ECharts Getting Started Example"
  },
  "responsive": true,
  "tooltip": {},
  "legend": {
    "top": "30px",
    "data": ["sales"]
  },
  "xAxis": {
    "data": ["Shirts", "Cardigans", "Chiffons", "Pants", "Heels", "Socks"]
  },
  "yAxis": {},
  "series": [
    {
      "name": "sales",
      "type": "bar",
      "data": [5, 20, 36, 10, 10, 20]
    }
  ]
}
</code></pre> <p>Note that this library offer support for both light and dark themes. You can switch between them using the theme switcher in the top right corner of the page.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included echarts code could look like]]></summary></entry></feed>